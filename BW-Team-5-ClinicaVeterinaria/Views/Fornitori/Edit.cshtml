@model BW_Team_5_ClinicaVeterinaria.Models.Fornitori

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="container">
    <h4>Modifica fornitore</h4>
    <hr />
    <div class="card mb-3" style="max-width: 1300px;">
        <div class="row g-0">
            <div class="col-md-8">
                <div class="col-md-10 mt-3" style="padding-left: 100px; padding-right: 100px">
                    <div class="form-group">
                        @Html.HiddenFor(m=>m.IdFornitori)
                        @Html.LabelFor(model => model.RagioneSociale, htmlAttributes: new { @class = "form-label" })
                        <div class="form-outline mb-2">
                            @Html.EditorFor(model => model.RagioneSociale, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.RagioneSociale, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Indirizzo, htmlAttributes: new { @class = "form-label" })
                        <div class="form-outline mb-2">
                            @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Piva, htmlAttributes: new { @class = "form-label" })
                        <div class="form-outline mb-2">
                            @Html.EditorFor(model => model.Piva, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Piva, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Citta, htmlAttributes: new { @class = "form-label" })
                        <div class="form-outline mb-2">
                            @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Recapito, htmlAttributes: new { @class = "form-label" })
                        <div class="form-outline mb-2">
                            @Html.EditorFor(model => model.Recapito, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Recapito, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="form-group">
                        <input type="submit" value="Salva modifiche" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <img src="https://us.123rf.com/450wm/damedeeso/damedeeso1911/damedeeso191100048/134434543-cane-salsiccia-bassotto-postino-consegnando-una-grande-busta-vuota-bianca-vuota-con-scatole-e.jpg?ver=6"
                     alt="Cane postino"
                     class="img-fluid rounded-start"
                     style="height: 480px;" />
            </div>
        </div>
    </div>
</div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
