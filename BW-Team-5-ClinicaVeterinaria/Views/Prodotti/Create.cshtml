@model BW_Team_5_ClinicaVeterinaria.Models.Prodotti

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Prodotti", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h4>Nuovi prodotto</h4>
        <hr />
        <div class="card mb-3">
            <div class="row g-0">
                <div class="col-md-8">
                    <div class="form-horizontal" style="padding-left: 50px; padding-right: 50px">
                        <br />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="form-outline mb-4">
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Nome, new { @class = "form-label" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="form-outline mb-4">
                                @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.Descrizione, new { @class = "form-label" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="form-outline mb-4">
                                @Html.EditorFor(model => model.QuantitaDisponibile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.QuantitaDisponibile, new { @class = "form-label" })
                            </div>
                            @Html.ValidationMessageFor(model => model.QuantitaDisponibile, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="form-outline mb-4">
                                @Html.EditorFor(model => model.PrezzoUnitario, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.PrezzoUnitario, new { @class = "form-label" })
                            </div>
                            @Html.ValidationMessageFor(model => model.PrezzoUnitario, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FotoProdotto, new { @class = "col-form-label col-md-2" })
                            <div class="form-outline mb-4">
                                @Html.EditorFor(model => model.FotoProdotto, new { htmlAttributes = new { @class = "form-control", @type = "file" , @id="Foto"} })
                            </div>
                            @Html.ValidationMessageFor(model => model.FotoProdotto, "", new { @class = "text-danger" })
                        </div>




                        <div class="form-group">
                            @Html.LabelFor(model => model.IdFornitori, "Fornitori", htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdFornitori", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdFornitori, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCategoria, "Categoria", htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdCategoria", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCassetti, "Cassetti", htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdCassetti", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCassetti, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Nuovo prodotto" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <img src="https://ilfattoalimentare.it/wp-content/uploads/2016/05/gatto-cibo-per-gatti-Fotolia_94150553_Subscription_Monthly_M.jpg"
                         alt="Immagine Prodotto"
                         class="img-fluid rounded-start"
                         style="width: auto; height: 680px;"
                         id="imgUpload"
                         />
                </div>
            </div>
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
         $('#Foto').change(function () {
             var input = this;
             if (input.files && input.files[0]) {
                 var reader = new FileReader();

                 reader.onload = function (e) {
                     $('#imgUpload').attr('src', e.target.result);
                 };

                 reader.readAsDataURL(input.files[0]);
             }
             else {
                 imagePreview.attr("src", "https://www.consumatori.it/wp-content/uploads/2022/08/UNC_cane_malato.jpg");
             }
         });
    </script>
}
